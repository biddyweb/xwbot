#cmake_minimum_required (VERSION 2.6) 
#PROJECT (xwlib++)

IF(CMAKE_COMPILER_IS_GNUCC)
SET(CORE_CFLAGS "-Wall -O2 -I./ ${DEBUG_CFLAGS}")
ENDIF(CMAKE_COMPILER_IS_GNUCC)

SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${CORE_CFLAGS}")

STRING (REGEX REPLACE "/RTC(su|[1su])" "" CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}")

#SET(BUILD_SHARED_LIBS ON)

INCLUDE_DIRECTORIES( ${include_top_dir} )

ADD_LIBRARY(xw++ x_objxx.cpp)

IF (UNIX)
TARGET_LINK_LIBRARIES(xw++ xw stdc++)
ENDIF (UNIX)

IF (WIN32)
TARGET_LINK_LIBRARIES(xw++ xw)
ENDIF(WIN32)

IF(ANDROID)
TARGET_LINK_LIBRARIES(xw++ xw stdc++ log)
ENDIF(ANDROID)

SET(TARGET_VERSION_MAJOR 1)
SET(TARGET_VERSION_MINOR 2)
#SET_TARGET_PROPERTIES(xw++ PROPERTIES VERSION 0.0.1 SOVERSION 0.0)

FILE(GLOB ifiles "${CMAKE_CURRENT_SOURCE_DIR}/*.h")
INSTALL(FILES ${ifiles} DESTINATION include/xwlib++)
INSTALL(TARGETS xw++ DESTINATION lib)

IF(NOT IOS)
ADD_EXECUTABLE (xxtest1 xwxxtest.cpp) 
TARGET_LINK_LIBRARIES(xxtest1 xw++)
ADD_DEPENDENCIES( xxtest1 xw++ )
ENDIF(NOT IOS)


SET(CPACK_PACKAGE_VERSION "1.2.0")
SET(CPACK_PACKAGE_VERSION_MAJOR "1")
SET(CPACK_PACKAGE_VERSION_MINOR "2")
SET(CPACK_PACKAGE_VERSION_PATCH "0") 
#SET(CPACK_GENERATOR "DEB")
SET(CPACK_DEBIAN_PACKAGE_MAINTAINER "gobee") 
#SET(CPACK_GENERATOR "RPM")
 
INCLUDE(CPack)

ENABLE_TESTING()

